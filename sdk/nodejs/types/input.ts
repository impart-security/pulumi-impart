// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ListItem {
    /**
     * The list item expiration.
     */
    expiration?: pulumi.Input<string>;
    /**
     * The list item value.
     */
    value: pulumi.Input<string>;
}

export interface MonitorCondition {
    /**
     * Greater than, equal to, or less than (should be one of 'gt', 'lt', or 'eq')
     */
    comparator: pulumi.Input<string>;
    /**
     * In milliseconds, the offset from now() for the time window.
     */
    delay: pulumi.Input<number>;
    details: pulumi.Input<inputs.MonitorConditionDetails>;
    /**
     * Number of occurrences that need to execute to have this condition be true.
     */
    threshold: pulumi.Input<number>;
    /**
     * In milliseconds, the time span from now until when we should be counting events (for example, 60000 is all events in the last minute).
     */
    timePeriod: pulumi.Input<number>;
}

export interface MonitorConditionDetails {
    /**
     * Strictly for event type monitors. A slug of the action the monitor is tracking.
     */
    action?: pulumi.Input<string>;
    /**
     * Strictly for event type monitors. A slug of the actor type the monitor is tracking.
     */
    actorType?: pulumi.Input<string>;
    /**
     * Strictly for event type monitors. A slug of the subject type the monitor is tracking.
     */
    subjectType?: pulumi.Input<string>;
    /**
     * Strictly for metric type monitors. The tag the monitor is tracking.
     */
    tag?: pulumi.Input<string>;
    /**
     * The type of monitor (should be one of 'event' or 'metric'
     */
    type: pulumi.Input<string>;
}

export interface RuleScriptDependenciesDependency {
    /**
     * IDs of the rule script this rule depends on.
     */
    dependsOnRuleScriptIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the rule script
     */
    ruleScriptId: pulumi.Input<string>;
}
