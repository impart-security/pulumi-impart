// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package impart

import (
	"context"
	"reflect"

	"errors"
	"github.com/impart-security/pulumi-impart/sdk/go/impart/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/impart-security/pulumi-impart/sdk/go/impart"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create a new rule client identifier
//			_, err := impart.NewRuleClientIdentifier(ctx, "clientIdentifier", &impart.RuleClientIdentifierArgs{
//				Description: pulumi.String("terraform client identifier"),
//				HashFields: impart.RuleClientIdentifierHashFieldArray{
//					&impart.RuleClientIdentifierHashFieldArgs{
//						Field: pulumi.String("header_value"),
//						Key:   pulumi.String("Authorization"),
//					},
//					&impart.RuleClientIdentifierHashFieldArgs{
//						Field: pulumi.String("client_ip"),
//					},
//				},
//				Name: pulumi.String("client identifier"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type RuleClientIdentifier struct {
	pulumi.CustomResourceState

	// The description for the rule client identifier.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The hash fields for the rule client identifier.
	HashFields RuleClientIdentifierHashFieldArrayOutput `pulumi:"hashFields"`
	// The name for the rule client identifier.
	Name pulumi.StringOutput `pulumi:"name"`
	// The storage id for the rule client identifier.
	StorageId pulumi.StringPtrOutput `pulumi:"storageId"`
}

// NewRuleClientIdentifier registers a new resource with the given unique name, arguments, and options.
func NewRuleClientIdentifier(ctx *pulumi.Context,
	name string, args *RuleClientIdentifierArgs, opts ...pulumi.ResourceOption) (*RuleClientIdentifier, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HashFields == nil {
		return nil, errors.New("invalid value for required argument 'HashFields'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RuleClientIdentifier
	err := ctx.RegisterResource("impart:index/ruleClientIdentifier:RuleClientIdentifier", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRuleClientIdentifier gets an existing RuleClientIdentifier resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRuleClientIdentifier(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RuleClientIdentifierState, opts ...pulumi.ResourceOption) (*RuleClientIdentifier, error) {
	var resource RuleClientIdentifier
	err := ctx.ReadResource("impart:index/ruleClientIdentifier:RuleClientIdentifier", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RuleClientIdentifier resources.
type ruleClientIdentifierState struct {
	// The description for the rule client identifier.
	Description *string `pulumi:"description"`
	// The hash fields for the rule client identifier.
	HashFields []RuleClientIdentifierHashField `pulumi:"hashFields"`
	// The name for the rule client identifier.
	Name *string `pulumi:"name"`
	// The storage id for the rule client identifier.
	StorageId *string `pulumi:"storageId"`
}

type RuleClientIdentifierState struct {
	// The description for the rule client identifier.
	Description pulumi.StringPtrInput
	// The hash fields for the rule client identifier.
	HashFields RuleClientIdentifierHashFieldArrayInput
	// The name for the rule client identifier.
	Name pulumi.StringPtrInput
	// The storage id for the rule client identifier.
	StorageId pulumi.StringPtrInput
}

func (RuleClientIdentifierState) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleClientIdentifierState)(nil)).Elem()
}

type ruleClientIdentifierArgs struct {
	// The description for the rule client identifier.
	Description *string `pulumi:"description"`
	// The hash fields for the rule client identifier.
	HashFields []RuleClientIdentifierHashField `pulumi:"hashFields"`
	// The name for the rule client identifier.
	Name string `pulumi:"name"`
	// The storage id for the rule client identifier.
	StorageId *string `pulumi:"storageId"`
}

// The set of arguments for constructing a RuleClientIdentifier resource.
type RuleClientIdentifierArgs struct {
	// The description for the rule client identifier.
	Description pulumi.StringPtrInput
	// The hash fields for the rule client identifier.
	HashFields RuleClientIdentifierHashFieldArrayInput
	// The name for the rule client identifier.
	Name pulumi.StringInput
	// The storage id for the rule client identifier.
	StorageId pulumi.StringPtrInput
}

func (RuleClientIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleClientIdentifierArgs)(nil)).Elem()
}

type RuleClientIdentifierInput interface {
	pulumi.Input

	ToRuleClientIdentifierOutput() RuleClientIdentifierOutput
	ToRuleClientIdentifierOutputWithContext(ctx context.Context) RuleClientIdentifierOutput
}

func (*RuleClientIdentifier) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleClientIdentifier)(nil)).Elem()
}

func (i *RuleClientIdentifier) ToRuleClientIdentifierOutput() RuleClientIdentifierOutput {
	return i.ToRuleClientIdentifierOutputWithContext(context.Background())
}

func (i *RuleClientIdentifier) ToRuleClientIdentifierOutputWithContext(ctx context.Context) RuleClientIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleClientIdentifierOutput)
}

// RuleClientIdentifierArrayInput is an input type that accepts RuleClientIdentifierArray and RuleClientIdentifierArrayOutput values.
// You can construct a concrete instance of `RuleClientIdentifierArrayInput` via:
//
//	RuleClientIdentifierArray{ RuleClientIdentifierArgs{...} }
type RuleClientIdentifierArrayInput interface {
	pulumi.Input

	ToRuleClientIdentifierArrayOutput() RuleClientIdentifierArrayOutput
	ToRuleClientIdentifierArrayOutputWithContext(context.Context) RuleClientIdentifierArrayOutput
}

type RuleClientIdentifierArray []RuleClientIdentifierInput

func (RuleClientIdentifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RuleClientIdentifier)(nil)).Elem()
}

func (i RuleClientIdentifierArray) ToRuleClientIdentifierArrayOutput() RuleClientIdentifierArrayOutput {
	return i.ToRuleClientIdentifierArrayOutputWithContext(context.Background())
}

func (i RuleClientIdentifierArray) ToRuleClientIdentifierArrayOutputWithContext(ctx context.Context) RuleClientIdentifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleClientIdentifierArrayOutput)
}

// RuleClientIdentifierMapInput is an input type that accepts RuleClientIdentifierMap and RuleClientIdentifierMapOutput values.
// You can construct a concrete instance of `RuleClientIdentifierMapInput` via:
//
//	RuleClientIdentifierMap{ "key": RuleClientIdentifierArgs{...} }
type RuleClientIdentifierMapInput interface {
	pulumi.Input

	ToRuleClientIdentifierMapOutput() RuleClientIdentifierMapOutput
	ToRuleClientIdentifierMapOutputWithContext(context.Context) RuleClientIdentifierMapOutput
}

type RuleClientIdentifierMap map[string]RuleClientIdentifierInput

func (RuleClientIdentifierMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RuleClientIdentifier)(nil)).Elem()
}

func (i RuleClientIdentifierMap) ToRuleClientIdentifierMapOutput() RuleClientIdentifierMapOutput {
	return i.ToRuleClientIdentifierMapOutputWithContext(context.Background())
}

func (i RuleClientIdentifierMap) ToRuleClientIdentifierMapOutputWithContext(ctx context.Context) RuleClientIdentifierMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleClientIdentifierMapOutput)
}

type RuleClientIdentifierOutput struct{ *pulumi.OutputState }

func (RuleClientIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleClientIdentifier)(nil)).Elem()
}

func (o RuleClientIdentifierOutput) ToRuleClientIdentifierOutput() RuleClientIdentifierOutput {
	return o
}

func (o RuleClientIdentifierOutput) ToRuleClientIdentifierOutputWithContext(ctx context.Context) RuleClientIdentifierOutput {
	return o
}

// The description for the rule client identifier.
func (o RuleClientIdentifierOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleClientIdentifier) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The hash fields for the rule client identifier.
func (o RuleClientIdentifierOutput) HashFields() RuleClientIdentifierHashFieldArrayOutput {
	return o.ApplyT(func(v *RuleClientIdentifier) RuleClientIdentifierHashFieldArrayOutput { return v.HashFields }).(RuleClientIdentifierHashFieldArrayOutput)
}

// The name for the rule client identifier.
func (o RuleClientIdentifierOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleClientIdentifier) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The storage id for the rule client identifier.
func (o RuleClientIdentifierOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleClientIdentifier) pulumi.StringPtrOutput { return v.StorageId }).(pulumi.StringPtrOutput)
}

type RuleClientIdentifierArrayOutput struct{ *pulumi.OutputState }

func (RuleClientIdentifierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RuleClientIdentifier)(nil)).Elem()
}

func (o RuleClientIdentifierArrayOutput) ToRuleClientIdentifierArrayOutput() RuleClientIdentifierArrayOutput {
	return o
}

func (o RuleClientIdentifierArrayOutput) ToRuleClientIdentifierArrayOutputWithContext(ctx context.Context) RuleClientIdentifierArrayOutput {
	return o
}

func (o RuleClientIdentifierArrayOutput) Index(i pulumi.IntInput) RuleClientIdentifierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RuleClientIdentifier {
		return vs[0].([]*RuleClientIdentifier)[vs[1].(int)]
	}).(RuleClientIdentifierOutput)
}

type RuleClientIdentifierMapOutput struct{ *pulumi.OutputState }

func (RuleClientIdentifierMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RuleClientIdentifier)(nil)).Elem()
}

func (o RuleClientIdentifierMapOutput) ToRuleClientIdentifierMapOutput() RuleClientIdentifierMapOutput {
	return o
}

func (o RuleClientIdentifierMapOutput) ToRuleClientIdentifierMapOutputWithContext(ctx context.Context) RuleClientIdentifierMapOutput {
	return o
}

func (o RuleClientIdentifierMapOutput) MapIndex(k pulumi.StringInput) RuleClientIdentifierOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RuleClientIdentifier {
		return vs[0].(map[string]*RuleClientIdentifier)[vs[1].(string)]
	}).(RuleClientIdentifierOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RuleClientIdentifierInput)(nil)).Elem(), &RuleClientIdentifier{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleClientIdentifierArrayInput)(nil)).Elem(), RuleClientIdentifierArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleClientIdentifierMapInput)(nil)).Elem(), RuleClientIdentifierMap{})
	pulumi.RegisterOutputType(RuleClientIdentifierOutput{})
	pulumi.RegisterOutputType(RuleClientIdentifierArrayOutput{})
	pulumi.RegisterOutputType(RuleClientIdentifierMapOutput{})
}
